// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CoordInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CoordInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SK {

namespace {

const ::google::protobuf::Descriptor* CoordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CoordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CoordInfo_Coord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CoordInfo_Coord_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CoordInfo_2eproto() {
  protobuf_AddDesc_CoordInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CoordInfo.proto");
  GOOGLE_CHECK(file != NULL);
  CoordInfo_descriptor_ = file->message_type(0);
  static const int CoordInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, icount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, coords_),
  };
  CoordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CoordInfo_descriptor_,
      CoordInfo::default_instance_,
      CoordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CoordInfo));
  CoordInfo_Coord_descriptor_ = CoordInfo_descriptor_->nested_type(0);
  static const int CoordInfo_Coord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo_Coord, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo_Coord, lon_),
  };
  CoordInfo_Coord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CoordInfo_Coord_descriptor_,
      CoordInfo_Coord::default_instance_,
      CoordInfo_Coord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo_Coord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo_Coord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CoordInfo_Coord));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CoordInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CoordInfo_descriptor_, &CoordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CoordInfo_Coord_descriptor_, &CoordInfo_Coord::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CoordInfo_2eproto() {
  delete CoordInfo::default_instance_;
  delete CoordInfo_reflection_;
  delete CoordInfo_Coord::default_instance_;
  delete CoordInfo_Coord_reflection_;
}

void protobuf_AddDesc_CoordInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017CoordInfo.proto\022\002SK\"c\n\tCoordInfo\022\016\n\006iC"
    "ount\030\001 \002(\003\022#\n\006Coords\030\002 \003(\0132\023.SK.CoordInf"
    "o.Coord\032!\n\005Coord\022\013\n\003Lat\030\001 \002(\001\022\013\n\003Lon\030\002 \002"
    "(\001", 122);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CoordInfo.proto", &protobuf_RegisterTypes);
  CoordInfo::default_instance_ = new CoordInfo();
  CoordInfo_Coord::default_instance_ = new CoordInfo_Coord();
  CoordInfo::default_instance_->InitAsDefaultInstance();
  CoordInfo_Coord::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CoordInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CoordInfo_2eproto {
  StaticDescriptorInitializer_CoordInfo_2eproto() {
    protobuf_AddDesc_CoordInfo_2eproto();
  }
} static_descriptor_initializer_CoordInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CoordInfo_Coord::kLatFieldNumber;
const int CoordInfo_Coord::kLonFieldNumber;
#endif  // !_MSC_VER

CoordInfo_Coord::CoordInfo_Coord()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.CoordInfo.Coord)
}

void CoordInfo_Coord::InitAsDefaultInstance() {
}

CoordInfo_Coord::CoordInfo_Coord(const CoordInfo_Coord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.CoordInfo.Coord)
}

void CoordInfo_Coord::SharedCtor() {
  _cached_size_ = 0;
  lat_ = 0;
  lon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CoordInfo_Coord::~CoordInfo_Coord() {
  // @@protoc_insertion_point(destructor:SK.CoordInfo.Coord)
  SharedDtor();
}

void CoordInfo_Coord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CoordInfo_Coord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordInfo_Coord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CoordInfo_Coord_descriptor_;
}

const CoordInfo_Coord& CoordInfo_Coord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CoordInfo_2eproto();
  return *default_instance_;
}

CoordInfo_Coord* CoordInfo_Coord::default_instance_ = NULL;

CoordInfo_Coord* CoordInfo_Coord::New() const {
  return new CoordInfo_Coord;
}

void CoordInfo_Coord::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CoordInfo_Coord*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(lat_, lon_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CoordInfo_Coord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.CoordInfo.Coord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double Lat = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
          set_has_lat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_Lon;
        break;
      }

      // required double Lon = 2;
      case 2: {
        if (tag == 17) {
         parse_Lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
          set_has_lon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.CoordInfo.Coord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.CoordInfo.Coord)
  return false;
#undef DO_
}

void CoordInfo_Coord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.CoordInfo.Coord)
  // required double Lat = 1;
  if (has_lat()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lat(), output);
  }

  // required double Lon = 2;
  if (has_lon()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.CoordInfo.Coord)
}

::google::protobuf::uint8* CoordInfo_Coord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.CoordInfo.Coord)
  // required double Lat = 1;
  if (has_lat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lat(), target);
  }

  // required double Lon = 2;
  if (has_lon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.CoordInfo.Coord)
  return target;
}

int CoordInfo_Coord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double Lat = 1;
    if (has_lat()) {
      total_size += 1 + 8;
    }

    // required double Lon = 2;
    if (has_lon()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordInfo_Coord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CoordInfo_Coord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CoordInfo_Coord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CoordInfo_Coord::MergeFrom(const CoordInfo_Coord& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lat()) {
      set_lat(from.lat());
    }
    if (from.has_lon()) {
      set_lon(from.lon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CoordInfo_Coord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordInfo_Coord::CopyFrom(const CoordInfo_Coord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordInfo_Coord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CoordInfo_Coord::Swap(CoordInfo_Coord* other) {
  if (other != this) {
    std::swap(lat_, other->lat_);
    std::swap(lon_, other->lon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CoordInfo_Coord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CoordInfo_Coord_descriptor_;
  metadata.reflection = CoordInfo_Coord_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CoordInfo::kICountFieldNumber;
const int CoordInfo::kCoordsFieldNumber;
#endif  // !_MSC_VER

CoordInfo::CoordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.CoordInfo)
}

void CoordInfo::InitAsDefaultInstance() {
}

CoordInfo::CoordInfo(const CoordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.CoordInfo)
}

void CoordInfo::SharedCtor() {
  _cached_size_ = 0;
  icount_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CoordInfo::~CoordInfo() {
  // @@protoc_insertion_point(destructor:SK.CoordInfo)
  SharedDtor();
}

void CoordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CoordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CoordInfo_descriptor_;
}

const CoordInfo& CoordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CoordInfo_2eproto();
  return *default_instance_;
}

CoordInfo* CoordInfo::default_instance_ = NULL;

CoordInfo* CoordInfo::New() const {
  return new CoordInfo;
}

void CoordInfo::Clear() {
  icount_ = GOOGLE_LONGLONG(0);
  coords_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CoordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.CoordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 iCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &icount_)));
          set_has_icount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Coords;
        break;
      }

      // repeated .SK.CoordInfo.Coord Coords = 2;
      case 2: {
        if (tag == 18) {
         parse_Coords:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coords()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Coords;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.CoordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.CoordInfo)
  return false;
#undef DO_
}

void CoordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.CoordInfo)
  // required int64 iCount = 1;
  if (has_icount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->icount(), output);
  }

  // repeated .SK.CoordInfo.Coord Coords = 2;
  for (int i = 0; i < this->coords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->coords(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.CoordInfo)
}

::google::protobuf::uint8* CoordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.CoordInfo)
  // required int64 iCount = 1;
  if (has_icount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->icount(), target);
  }

  // repeated .SK.CoordInfo.Coord Coords = 2;
  for (int i = 0; i < this->coords_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->coords(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.CoordInfo)
  return target;
}

int CoordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 iCount = 1;
    if (has_icount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->icount());
    }

  }
  // repeated .SK.CoordInfo.Coord Coords = 2;
  total_size += 1 * this->coords_size();
  for (int i = 0; i < this->coords_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coords(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CoordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CoordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CoordInfo::MergeFrom(const CoordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  coords_.MergeFrom(from.coords_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_icount()) {
      set_icount(from.icount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CoordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordInfo::CopyFrom(const CoordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->coords())) return false;
  return true;
}

void CoordInfo::Swap(CoordInfo* other) {
  if (other != this) {
    std::swap(icount_, other->icount_);
    coords_.Swap(&other->coords_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CoordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CoordInfo_descriptor_;
  metadata.reflection = CoordInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SK

// @@protoc_insertion_point(global_scope)
