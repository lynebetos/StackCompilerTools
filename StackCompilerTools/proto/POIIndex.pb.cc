// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POIIndex.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POIIndex.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SK {

namespace {

const ::google::protobuf::Descriptor* POIIndex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POIIndex_reflection_ = NULL;
const ::google::protobuf::Descriptor* POIIndex_mapPOI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POIIndex_mapPOI_reflection_ = NULL;
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POIIndex_mapPOI_stakePOI_reflection_ = NULL;
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI_typePOI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POIIndex_mapPOI_stakePOI_typePOI_reflection_ = NULL;
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POIIndex_mapPOI_stakePOI_typePOI_POI_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POIIndex_2eproto() {
  protobuf_AddDesc_POIIndex_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POIIndex.proto");
  GOOGLE_CHECK(file != NULL);
  POIIndex_descriptor_ = file->message_type(0);
  static const int POIIndex_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex, icount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex, roads_),
  };
  POIIndex_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      POIIndex_descriptor_,
      POIIndex::default_instance_,
      POIIndex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(POIIndex));
  POIIndex_mapPOI_descriptor_ = POIIndex_descriptor_->nested_type(0);
  static const int POIIndex_mapPOI_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI, stakepois_),
  };
  POIIndex_mapPOI_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      POIIndex_mapPOI_descriptor_,
      POIIndex_mapPOI::default_instance_,
      POIIndex_mapPOI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(POIIndex_mapPOI));
  POIIndex_mapPOI_stakePOI_descriptor_ = POIIndex_mapPOI_descriptor_->nested_type(0);
  static const int POIIndex_mapPOI_stakePOI_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI, stakenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI, types_),
  };
  POIIndex_mapPOI_stakePOI_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      POIIndex_mapPOI_stakePOI_descriptor_,
      POIIndex_mapPOI_stakePOI::default_instance_,
      POIIndex_mapPOI_stakePOI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(POIIndex_mapPOI_stakePOI));
  POIIndex_mapPOI_stakePOI_typePOI_descriptor_ = POIIndex_mapPOI_stakePOI_descriptor_->nested_type(0);
  static const int POIIndex_mapPOI_stakePOI_typePOI_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI, pois_),
  };
  POIIndex_mapPOI_stakePOI_typePOI_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      POIIndex_mapPOI_stakePOI_typePOI_descriptor_,
      POIIndex_mapPOI_stakePOI_typePOI::default_instance_,
      POIIndex_mapPOI_stakePOI_typePOI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(POIIndex_mapPOI_stakePOI_typePOI));
  POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_ = POIIndex_mapPOI_stakePOI_typePOI_descriptor_->nested_type(0);
  static const int POIIndex_mapPOI_stakePOI_typePOI_POI_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI_POI, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI_POI, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI_POI, lon_),
  };
  POIIndex_mapPOI_stakePOI_typePOI_POI_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_,
      POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance_,
      POIIndex_mapPOI_stakePOI_typePOI_POI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI_POI, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIIndex_mapPOI_stakePOI_typePOI_POI, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(POIIndex_mapPOI_stakePOI_typePOI_POI));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POIIndex_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    POIIndex_descriptor_, &POIIndex::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    POIIndex_mapPOI_descriptor_, &POIIndex_mapPOI::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    POIIndex_mapPOI_stakePOI_descriptor_, &POIIndex_mapPOI_stakePOI::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    POIIndex_mapPOI_stakePOI_typePOI_descriptor_, &POIIndex_mapPOI_stakePOI_typePOI::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_, &POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POIIndex_2eproto() {
  delete POIIndex::default_instance_;
  delete POIIndex_reflection_;
  delete POIIndex_mapPOI::default_instance_;
  delete POIIndex_mapPOI_reflection_;
  delete POIIndex_mapPOI_stakePOI::default_instance_;
  delete POIIndex_mapPOI_stakePOI_reflection_;
  delete POIIndex_mapPOI_stakePOI_typePOI::default_instance_;
  delete POIIndex_mapPOI_stakePOI_typePOI_reflection_;
  delete POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance_;
  delete POIIndex_mapPOI_stakePOI_typePOI_POI_reflection_;
}

void protobuf_AddDesc_POIIndex_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016POIIndex.proto\022\002SK\"\351\002\n\010POIIndex\022\016\n\006iCo"
    "unt\030\001 \002(\005\022\"\n\005roads\030\002 \003(\0132\023.SK.POIIndex.m"
    "apPOI\032\250\002\n\006mapPOI\022\014\n\004code\030\001 \002(\t\022\013\n\003dir\030\002 "
    "\002(\005\022/\n\tstakepois\030\003 \003(\0132\034.SK.POIIndex.map"
    "POI.stakePOI\032\321\001\n\010stakePOI\022\020\n\010stakenum\030\001 "
    "\002(\005\0223\n\005types\030\002 \002(\0132$.SK.POIIndex.mapPOI."
    "stakePOI.typePOI\032~\n\007typePOI\022\014\n\004type\030\001 \002("
    "\005\0226\n\004pois\030\002 \002(\0132(.SK.POIIndex.mapPOI.sta"
    "kePOI.typePOI.POI\032-\n\003POI\022\014\n\004name\030\001 \002(\t\022\013"
    "\n\003Lat\030\002 \002(\001\022\013\n\003Lon\030\003 \002(\001", 384);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POIIndex.proto", &protobuf_RegisterTypes);
  POIIndex::default_instance_ = new POIIndex();
  POIIndex_mapPOI::default_instance_ = new POIIndex_mapPOI();
  POIIndex_mapPOI_stakePOI::default_instance_ = new POIIndex_mapPOI_stakePOI();
  POIIndex_mapPOI_stakePOI_typePOI::default_instance_ = new POIIndex_mapPOI_stakePOI_typePOI();
  POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance_ = new POIIndex_mapPOI_stakePOI_typePOI_POI();
  POIIndex::default_instance_->InitAsDefaultInstance();
  POIIndex_mapPOI::default_instance_->InitAsDefaultInstance();
  POIIndex_mapPOI_stakePOI::default_instance_->InitAsDefaultInstance();
  POIIndex_mapPOI_stakePOI_typePOI::default_instance_->InitAsDefaultInstance();
  POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POIIndex_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POIIndex_2eproto {
  StaticDescriptorInitializer_POIIndex_2eproto() {
    protobuf_AddDesc_POIIndex_2eproto();
  }
} static_descriptor_initializer_POIIndex_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int POIIndex_mapPOI_stakePOI_typePOI_POI::kNameFieldNumber;
const int POIIndex_mapPOI_stakePOI_typePOI_POI::kLatFieldNumber;
const int POIIndex_mapPOI_stakePOI_typePOI_POI::kLonFieldNumber;
#endif  // !_MSC_VER

POIIndex_mapPOI_stakePOI_typePOI_POI::POIIndex_mapPOI_stakePOI_typePOI_POI()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::InitAsDefaultInstance() {
}

POIIndex_mapPOI_stakePOI_typePOI_POI::POIIndex_mapPOI_stakePOI_typePOI_POI(const POIIndex_mapPOI_stakePOI_typePOI_POI& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_ = 0;
  lon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

POIIndex_mapPOI_stakePOI_typePOI_POI::~POIIndex_mapPOI_stakePOI_typePOI_POI() {
  // @@protoc_insertion_point(destructor:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  SharedDtor();
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI_typePOI_POI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_;
}

const POIIndex_mapPOI_stakePOI_typePOI_POI& POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POIIndex_2eproto();
  return *default_instance_;
}

POIIndex_mapPOI_stakePOI_typePOI_POI* POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance_ = NULL;

POIIndex_mapPOI_stakePOI_typePOI_POI* POIIndex_mapPOI_stakePOI_typePOI_POI::New() const {
  return new POIIndex_mapPOI_stakePOI_typePOI_POI;
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<POIIndex_mapPOI_stakePOI_typePOI_POI*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(lat_, lon_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool POIIndex_mapPOI_stakePOI_typePOI_POI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_Lat;
        break;
      }

      // required double Lat = 2;
      case 2: {
        if (tag == 17) {
         parse_Lat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
          set_has_lat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_Lon;
        break;
      }

      // required double Lon = 3;
      case 3: {
        if (tag == 25) {
         parse_Lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
          set_has_lon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  return false;
#undef DO_
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required double Lat = 2;
  if (has_lat()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lat(), output);
  }

  // required double Lon = 3;
  if (has_lon()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
}

::google::protobuf::uint8* POIIndex_mapPOI_stakePOI_typePOI_POI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required double Lat = 2;
  if (has_lat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lat(), target);
  }

  // required double Lon = 3;
  if (has_lon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->lon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.POIIndex.mapPOI.stakePOI.typePOI.POI)
  return target;
}

int POIIndex_mapPOI_stakePOI_typePOI_POI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required double Lat = 2;
    if (has_lat()) {
      total_size += 1 + 8;
    }

    // required double Lon = 3;
    if (has_lon()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const POIIndex_mapPOI_stakePOI_typePOI_POI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const POIIndex_mapPOI_stakePOI_typePOI_POI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::MergeFrom(const POIIndex_mapPOI_stakePOI_typePOI_POI& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_lat()) {
      set_lat(from.lat());
    }
    if (from.has_lon()) {
      set_lon(from.lon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::CopyFrom(const POIIndex_mapPOI_stakePOI_typePOI_POI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIIndex_mapPOI_stakePOI_typePOI_POI::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void POIIndex_mapPOI_stakePOI_typePOI_POI::Swap(POIIndex_mapPOI_stakePOI_typePOI_POI* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(lat_, other->lat_);
    std::swap(lon_, other->lon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata POIIndex_mapPOI_stakePOI_typePOI_POI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POIIndex_mapPOI_stakePOI_typePOI_POI_descriptor_;
  metadata.reflection = POIIndex_mapPOI_stakePOI_typePOI_POI_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int POIIndex_mapPOI_stakePOI_typePOI::kTypeFieldNumber;
const int POIIndex_mapPOI_stakePOI_typePOI::kPoisFieldNumber;
#endif  // !_MSC_VER

POIIndex_mapPOI_stakePOI_typePOI::POIIndex_mapPOI_stakePOI_typePOI()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.POIIndex.mapPOI.stakePOI.typePOI)
}

void POIIndex_mapPOI_stakePOI_typePOI::InitAsDefaultInstance() {
  pois_ = const_cast< ::SK::POIIndex_mapPOI_stakePOI_typePOI_POI*>(&::SK::POIIndex_mapPOI_stakePOI_typePOI_POI::default_instance());
}

POIIndex_mapPOI_stakePOI_typePOI::POIIndex_mapPOI_stakePOI_typePOI(const POIIndex_mapPOI_stakePOI_typePOI& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.POIIndex.mapPOI.stakePOI.typePOI)
}

void POIIndex_mapPOI_stakePOI_typePOI::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  pois_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

POIIndex_mapPOI_stakePOI_typePOI::~POIIndex_mapPOI_stakePOI_typePOI() {
  // @@protoc_insertion_point(destructor:SK.POIIndex.mapPOI.stakePOI.typePOI)
  SharedDtor();
}

void POIIndex_mapPOI_stakePOI_typePOI::SharedDtor() {
  if (this != default_instance_) {
    delete pois_;
  }
}

void POIIndex_mapPOI_stakePOI_typePOI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI_typePOI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POIIndex_mapPOI_stakePOI_typePOI_descriptor_;
}

const POIIndex_mapPOI_stakePOI_typePOI& POIIndex_mapPOI_stakePOI_typePOI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POIIndex_2eproto();
  return *default_instance_;
}

POIIndex_mapPOI_stakePOI_typePOI* POIIndex_mapPOI_stakePOI_typePOI::default_instance_ = NULL;

POIIndex_mapPOI_stakePOI_typePOI* POIIndex_mapPOI_stakePOI_typePOI::New() const {
  return new POIIndex_mapPOI_stakePOI_typePOI;
}

void POIIndex_mapPOI_stakePOI_typePOI::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_pois()) {
      if (pois_ != NULL) pois_->::SK::POIIndex_mapPOI_stakePOI_typePOI_POI::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool POIIndex_mapPOI_stakePOI_typePOI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.POIIndex.mapPOI.stakePOI.typePOI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pois;
        break;
      }

      // required .SK.POIIndex.mapPOI.stakePOI.typePOI.POI pois = 2;
      case 2: {
        if (tag == 18) {
         parse_pois:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pois()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.POIIndex.mapPOI.stakePOI.typePOI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.POIIndex.mapPOI.stakePOI.typePOI)
  return false;
#undef DO_
}

void POIIndex_mapPOI_stakePOI_typePOI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.POIIndex.mapPOI.stakePOI.typePOI)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required .SK.POIIndex.mapPOI.stakePOI.typePOI.POI pois = 2;
  if (has_pois()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pois(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.POIIndex.mapPOI.stakePOI.typePOI)
}

::google::protobuf::uint8* POIIndex_mapPOI_stakePOI_typePOI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.POIIndex.mapPOI.stakePOI.typePOI)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required .SK.POIIndex.mapPOI.stakePOI.typePOI.POI pois = 2;
  if (has_pois()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pois(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.POIIndex.mapPOI.stakePOI.typePOI)
  return target;
}

int POIIndex_mapPOI_stakePOI_typePOI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required .SK.POIIndex.mapPOI.stakePOI.typePOI.POI pois = 2;
    if (has_pois()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pois());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIIndex_mapPOI_stakePOI_typePOI::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const POIIndex_mapPOI_stakePOI_typePOI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const POIIndex_mapPOI_stakePOI_typePOI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void POIIndex_mapPOI_stakePOI_typePOI::MergeFrom(const POIIndex_mapPOI_stakePOI_typePOI& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_pois()) {
      mutable_pois()->::SK::POIIndex_mapPOI_stakePOI_typePOI_POI::MergeFrom(from.pois());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void POIIndex_mapPOI_stakePOI_typePOI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIIndex_mapPOI_stakePOI_typePOI::CopyFrom(const POIIndex_mapPOI_stakePOI_typePOI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIIndex_mapPOI_stakePOI_typePOI::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_pois()) {
    if (!this->pois().IsInitialized()) return false;
  }
  return true;
}

void POIIndex_mapPOI_stakePOI_typePOI::Swap(POIIndex_mapPOI_stakePOI_typePOI* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(pois_, other->pois_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata POIIndex_mapPOI_stakePOI_typePOI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POIIndex_mapPOI_stakePOI_typePOI_descriptor_;
  metadata.reflection = POIIndex_mapPOI_stakePOI_typePOI_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int POIIndex_mapPOI_stakePOI::kStakenumFieldNumber;
const int POIIndex_mapPOI_stakePOI::kTypesFieldNumber;
#endif  // !_MSC_VER

POIIndex_mapPOI_stakePOI::POIIndex_mapPOI_stakePOI()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.POIIndex.mapPOI.stakePOI)
}

void POIIndex_mapPOI_stakePOI::InitAsDefaultInstance() {
  types_ = const_cast< ::SK::POIIndex_mapPOI_stakePOI_typePOI*>(&::SK::POIIndex_mapPOI_stakePOI_typePOI::default_instance());
}

POIIndex_mapPOI_stakePOI::POIIndex_mapPOI_stakePOI(const POIIndex_mapPOI_stakePOI& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.POIIndex.mapPOI.stakePOI)
}

void POIIndex_mapPOI_stakePOI::SharedCtor() {
  _cached_size_ = 0;
  stakenum_ = 0;
  types_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

POIIndex_mapPOI_stakePOI::~POIIndex_mapPOI_stakePOI() {
  // @@protoc_insertion_point(destructor:SK.POIIndex.mapPOI.stakePOI)
  SharedDtor();
}

void POIIndex_mapPOI_stakePOI::SharedDtor() {
  if (this != default_instance_) {
    delete types_;
  }
}

void POIIndex_mapPOI_stakePOI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIIndex_mapPOI_stakePOI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POIIndex_mapPOI_stakePOI_descriptor_;
}

const POIIndex_mapPOI_stakePOI& POIIndex_mapPOI_stakePOI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POIIndex_2eproto();
  return *default_instance_;
}

POIIndex_mapPOI_stakePOI* POIIndex_mapPOI_stakePOI::default_instance_ = NULL;

POIIndex_mapPOI_stakePOI* POIIndex_mapPOI_stakePOI::New() const {
  return new POIIndex_mapPOI_stakePOI;
}

void POIIndex_mapPOI_stakePOI::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    stakenum_ = 0;
    if (has_types()) {
      if (types_ != NULL) types_->::SK::POIIndex_mapPOI_stakePOI_typePOI::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool POIIndex_mapPOI_stakePOI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.POIIndex.mapPOI.stakePOI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stakenum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stakenum_)));
          set_has_stakenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_types;
        break;
      }

      // required .SK.POIIndex.mapPOI.stakePOI.typePOI types = 2;
      case 2: {
        if (tag == 18) {
         parse_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.POIIndex.mapPOI.stakePOI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.POIIndex.mapPOI.stakePOI)
  return false;
#undef DO_
}

void POIIndex_mapPOI_stakePOI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.POIIndex.mapPOI.stakePOI)
  // required int32 stakenum = 1;
  if (has_stakenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stakenum(), output);
  }

  // required .SK.POIIndex.mapPOI.stakePOI.typePOI types = 2;
  if (has_types()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->types(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.POIIndex.mapPOI.stakePOI)
}

::google::protobuf::uint8* POIIndex_mapPOI_stakePOI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.POIIndex.mapPOI.stakePOI)
  // required int32 stakenum = 1;
  if (has_stakenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stakenum(), target);
  }

  // required .SK.POIIndex.mapPOI.stakePOI.typePOI types = 2;
  if (has_types()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->types(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.POIIndex.mapPOI.stakePOI)
  return target;
}

int POIIndex_mapPOI_stakePOI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stakenum = 1;
    if (has_stakenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stakenum());
    }

    // required .SK.POIIndex.mapPOI.stakePOI.typePOI types = 2;
    if (has_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->types());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIIndex_mapPOI_stakePOI::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const POIIndex_mapPOI_stakePOI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const POIIndex_mapPOI_stakePOI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void POIIndex_mapPOI_stakePOI::MergeFrom(const POIIndex_mapPOI_stakePOI& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stakenum()) {
      set_stakenum(from.stakenum());
    }
    if (from.has_types()) {
      mutable_types()->::SK::POIIndex_mapPOI_stakePOI_typePOI::MergeFrom(from.types());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void POIIndex_mapPOI_stakePOI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIIndex_mapPOI_stakePOI::CopyFrom(const POIIndex_mapPOI_stakePOI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIIndex_mapPOI_stakePOI::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_types()) {
    if (!this->types().IsInitialized()) return false;
  }
  return true;
}

void POIIndex_mapPOI_stakePOI::Swap(POIIndex_mapPOI_stakePOI* other) {
  if (other != this) {
    std::swap(stakenum_, other->stakenum_);
    std::swap(types_, other->types_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata POIIndex_mapPOI_stakePOI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POIIndex_mapPOI_stakePOI_descriptor_;
  metadata.reflection = POIIndex_mapPOI_stakePOI_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int POIIndex_mapPOI::kCodeFieldNumber;
const int POIIndex_mapPOI::kDirFieldNumber;
const int POIIndex_mapPOI::kStakepoisFieldNumber;
#endif  // !_MSC_VER

POIIndex_mapPOI::POIIndex_mapPOI()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.POIIndex.mapPOI)
}

void POIIndex_mapPOI::InitAsDefaultInstance() {
}

POIIndex_mapPOI::POIIndex_mapPOI(const POIIndex_mapPOI& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.POIIndex.mapPOI)
}

void POIIndex_mapPOI::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

POIIndex_mapPOI::~POIIndex_mapPOI() {
  // @@protoc_insertion_point(destructor:SK.POIIndex.mapPOI)
  SharedDtor();
}

void POIIndex_mapPOI::SharedDtor() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void POIIndex_mapPOI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIIndex_mapPOI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POIIndex_mapPOI_descriptor_;
}

const POIIndex_mapPOI& POIIndex_mapPOI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POIIndex_2eproto();
  return *default_instance_;
}

POIIndex_mapPOI* POIIndex_mapPOI::default_instance_ = NULL;

POIIndex_mapPOI* POIIndex_mapPOI::New() const {
  return new POIIndex_mapPOI;
}

void POIIndex_mapPOI::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
    dir_ = 0;
  }
  stakepois_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool POIIndex_mapPOI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.POIIndex.mapPOI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dir;
        break;
      }

      // required int32 dir = 2;
      case 2: {
        if (tag == 16) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_stakepois;
        break;
      }

      // repeated .SK.POIIndex.mapPOI.stakePOI stakepois = 3;
      case 3: {
        if (tag == 26) {
         parse_stakepois:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stakepois()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_stakepois;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.POIIndex.mapPOI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.POIIndex.mapPOI)
  return false;
#undef DO_
}

void POIIndex_mapPOI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.POIIndex.mapPOI)
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // required int32 dir = 2;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dir(), output);
  }

  // repeated .SK.POIIndex.mapPOI.stakePOI stakepois = 3;
  for (int i = 0; i < this->stakepois_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stakepois(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.POIIndex.mapPOI)
}

::google::protobuf::uint8* POIIndex_mapPOI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.POIIndex.mapPOI)
  // required string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // required int32 dir = 2;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dir(), target);
  }

  // repeated .SK.POIIndex.mapPOI.stakePOI stakepois = 3;
  for (int i = 0; i < this->stakepois_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->stakepois(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.POIIndex.mapPOI)
  return target;
}

int POIIndex_mapPOI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // required int32 dir = 2;
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dir());
    }

  }
  // repeated .SK.POIIndex.mapPOI.stakePOI stakepois = 3;
  total_size += 1 * this->stakepois_size();
  for (int i = 0; i < this->stakepois_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stakepois(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIIndex_mapPOI::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const POIIndex_mapPOI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const POIIndex_mapPOI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void POIIndex_mapPOI::MergeFrom(const POIIndex_mapPOI& from) {
  GOOGLE_CHECK_NE(&from, this);
  stakepois_.MergeFrom(from.stakepois_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void POIIndex_mapPOI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIIndex_mapPOI::CopyFrom(const POIIndex_mapPOI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIIndex_mapPOI::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->stakepois())) return false;
  return true;
}

void POIIndex_mapPOI::Swap(POIIndex_mapPOI* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(dir_, other->dir_);
    stakepois_.Swap(&other->stakepois_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata POIIndex_mapPOI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POIIndex_mapPOI_descriptor_;
  metadata.reflection = POIIndex_mapPOI_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int POIIndex::kICountFieldNumber;
const int POIIndex::kRoadsFieldNumber;
#endif  // !_MSC_VER

POIIndex::POIIndex()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SK.POIIndex)
}

void POIIndex::InitAsDefaultInstance() {
}

POIIndex::POIIndex(const POIIndex& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SK.POIIndex)
}

void POIIndex::SharedCtor() {
  _cached_size_ = 0;
  icount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

POIIndex::~POIIndex() {
  // @@protoc_insertion_point(destructor:SK.POIIndex)
  SharedDtor();
}

void POIIndex::SharedDtor() {
  if (this != default_instance_) {
  }
}

void POIIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIIndex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POIIndex_descriptor_;
}

const POIIndex& POIIndex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POIIndex_2eproto();
  return *default_instance_;
}

POIIndex* POIIndex::default_instance_ = NULL;

POIIndex* POIIndex::New() const {
  return new POIIndex;
}

void POIIndex::Clear() {
  icount_ = 0;
  roads_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool POIIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SK.POIIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 iCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icount_)));
          set_has_icount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roads;
        break;
      }

      // repeated .SK.POIIndex.mapPOI roads = 2;
      case 2: {
        if (tag == 18) {
         parse_roads:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_roads()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roads;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SK.POIIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SK.POIIndex)
  return false;
#undef DO_
}

void POIIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SK.POIIndex)
  // required int32 iCount = 1;
  if (has_icount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->icount(), output);
  }

  // repeated .SK.POIIndex.mapPOI roads = 2;
  for (int i = 0; i < this->roads_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roads(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SK.POIIndex)
}

::google::protobuf::uint8* POIIndex::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SK.POIIndex)
  // required int32 iCount = 1;
  if (has_icount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->icount(), target);
  }

  // repeated .SK.POIIndex.mapPOI roads = 2;
  for (int i = 0; i < this->roads_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->roads(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SK.POIIndex)
  return target;
}

int POIIndex::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 iCount = 1;
    if (has_icount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->icount());
    }

  }
  // repeated .SK.POIIndex.mapPOI roads = 2;
  total_size += 1 * this->roads_size();
  for (int i = 0; i < this->roads_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->roads(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIIndex::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const POIIndex* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const POIIndex*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void POIIndex::MergeFrom(const POIIndex& from) {
  GOOGLE_CHECK_NE(&from, this);
  roads_.MergeFrom(from.roads_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_icount()) {
      set_icount(from.icount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void POIIndex::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIIndex::CopyFrom(const POIIndex& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIIndex::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->roads())) return false;
  return true;
}

void POIIndex::Swap(POIIndex* other) {
  if (other != this) {
    std::swap(icount_, other->icount_);
    roads_.Swap(&other->roads_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata POIIndex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POIIndex_descriptor_;
  metadata.reflection = POIIndex_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SK

// @@protoc_insertion_point(global_scope)
